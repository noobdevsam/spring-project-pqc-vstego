server:
    port: 8082 # Port for the orchestration-service

# Enable Virtual Threads
spring:
    threads:
        virtual:
            enabled: true

    # 1. MongoDB Database
    data:
        mongodb:
            uri: mongodb://${ORCHESTRATION_SERVICE_MONGO_HOST:localhost}:${ORCHESTRATION_SERVICE_MONGO_PORT:27017}
            database: ${ORCHESTRATION_SERVICE_MONGO_DB:jobs_db}

    # 2. Kafka Configuration
    kafka:
        bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
        consumer:
            group-id: orchestration-consumer-group
            auto-offset-reset: earliest
    #            properties:
    #                spring.json.trusted.packages: "com.example.stego.orchestrationservice.dto.kafka"
    #        producer:
    #            properties:
    #                spring.json.add.type.headers: false

    # 3. Security: OAuth2 Resource Server with JWT
    security:
        oauth2:
            resourceserver:
                jwt:
                    # This Uri points to the public key endpoint of the gateway service
                    jwk-set-uri: http://${GATEWAY_SERVICE_HOST:localhost}:${GATEWAY_SERVICE_PORT}/.well-known/jwks.json

    # 4. Eureka (Discovery Service) Configuration
eureka:
    client:
        service-url:
            defaultZone: http://${EUREKA_SERVER_HOST:localhost}:8761/eureka/

# 5. Service URLs
services:
    file-service-url: "http://file-service" # "file-service" is the Eureka app name
    video-service-url: "http://video-processing-service"

# 6. Kafka Topic Names
pqcstego:
    topics:
        request-encode: job.request.encode
        request-decode: job.request.decode
        job-completion: job.completion